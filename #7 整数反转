给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例 1:

输入: 123
输出: 321

 示例 2:

输入: -123
输出: -321

示例 3:

输入: 120
输出: 21

注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/reverse-integer
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    public int reverse(int x) {
        //num为取余之后的数,result是输出结果
        int num;
        int result=0;
     
        while(x!=0)
        {
            //判断是否溢出
                num=x%10;
            //这个判断条件不成功的原因是，result是一个int型，当10*result的结果大于2147483648的时候，结果会变成另一个值
            // if(10*result+num>Integer.MAX_VALUE||10*result+num<Integer.MIN_VALUE)
            // {
            //     return 0;
            // }
            
            //判断上界 2147483647
            if(result>Integer.MAX_VALUE/10||result==Integer.MAX_VALUE/10&&num>7)
               { return 0; }
            //判断下界 -2147483647
            if(result<Integer.MIN_VALUE/10||result==Integer.MIN_VALUE/10&&num<-8)
               { return 0; }
               
            result=10*result+num;
            x/=10;
        }
         return result;
     
    }
}
