# 一、题干
判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

输入: 121
输出: true

示例 2:

输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。

示例 3:

输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。

进阶:

你能不将整数转为字符串来解决这个问题吗？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/palindrome-number
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

二、思路错误记录
1.先将原数转置，然后将转置的数和原数比较，在比较这一步出错了，用了已经为0的x和转置之后的数进行比较。

class Solution {
    public boolean isPalindrome(int x) {
        
        int origin=x;
        int result=0;
        int pop=0;
        
        //负数一定不是回文数
        if(x<0)
        {
            return false;
        }
        
        //整数转置
        while(x!=0)
        {
            pop=x%10;
            result=10*result+pop;
            x=x/10;
        }
        
        //和原数进行比较
        if(result==origin)
        {
            return true;
        }
        
        return false;
    }
}
