一、题干
给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。

示例 1:

输入: "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。

示例 2:

输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。

示例 3:

输入: "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/longest-substring-without-repeating-characters
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

二、错误记录
for(int start=0,end=0;end<n;end++){
            char x=s.charAt(end);
            
            //如果map中包含字符,start后移到相同元素前一个的后面
            if(map.containsKey(x)){
                start=Math.max(start,map.get(x));
            }
            
            //如果map中不包含字符，将字符加入map中
            map.put('x',end+1);
            ans=Math.max(end-start+1,ans);
        }
        
 在循环体内给char类型统一为变量x之后，在插入map的时候用了'x'

三、代码
class Solution {
    public int lengthOfLongestSubstring(String s) {
            
        int ans=0;
        int n=s.length();
        Map<Character,Integer> map = new HashMap<>();
            //对所有的i进行滑动窗口操作
        for(int start=0,end=0;end<n;end++){
            char x=s.charAt(end);
            
            //如果map中包含字符,start后移到相同元素前一个的后面
            if(map.containsKey(x)){
                start=Math.max(start,map.get(x));
            }
            
            //如果map中不包含字符，将字符加入map中
            map.put(x,end+1);
            ans=Math.max(end-start+1,ans);
        }
        
        return ans;
    }
}  
